/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package expertsystem;

import Controllers.Connection;
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.Box;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import music.MusicManager;

/**
 *
 * @author Kenneth Quirós N
 */
public class MainGUI extends javax.swing.JFrame {
    
    private final String[] circleEngland = {"Cb", "Gb", "Db", "Ab", "Eb", "Bb", 
        "F", "C", "G", "D", "A", "E", "B", "F#", "C#"};
    private final String[] circleItalian = {"Dob", "Solb", "Reb", "Lab", "Mib",
        "Sib", "Fa", "Do", "Sol", "Re", "La", "Mi", "Si", "Fa#", "Do#"};
    
    private final Piano piano = new Piano(this);
    private final  DefaultTableModel acordeTableMode;
    private final Connection connection= new Connection();

    private void reset(){
        this.lblTonalidad.setVisible(true);
        this.comboTonalidadNombre.setVisible(true);
        this.checkNombre.setVisible(true);
        this.checkNumero.setVisible(true);
        this.comboTonalidadNumero.setVisible(true);
        this.comboTonalidadAlteracion.setVisible(true);
        this.comboTonalidadNumero.setEnabled(false);
        this.comboTonalidadAlteracion.setEnabled(false);
        this.piano.setNotacion("1");
        this.piano.setAlteracion("#");
        this.piano.setNumero("0");
        
        onPiano("inglesa", "s");
        
        for (String circleEngland1 : circleEngland) {
            this.comboTonalidadNombre.addItem(circleEngland1);
        }
    }
    
    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        initComponents();
        
        this.acordeTableMode = (DefaultTableModel) tableAcorde.getModel();
        
        this.lblTonalidad.setVisible(false);
        this.comboTonalidadNombre.setVisible(false);
        this.comboTonalidadNumero.setVisible(false);
        this.comboTonalidadAlteracion.setVisible(false);
        this.checkNombre.setVisible(false);
        this.checkNumero.setVisible(false);
        
        ImageIcon img = new ImageIcon("src/assets/logo.png");
        this.setIconImage(img.getImage());
               
        Container mainPanel = this.getContentPane();
        
        this.reset();
        
        Color background = new Color(34,34,34);
        mainPanel.setBackground(background);

        mainPanel.add(Box.createRigidArea(new Dimension(0, 20)));
        
        
        mainPanel.setVisible(true);
        this.setResizable(false);
        mainPanel.setSize(1320,250);
    }
    
    private void onPiano(String pNotacion, String pAlteracion){
                
        panelPiano.removeAll();
        
        JPanel pianoTmp = piano.initPiano(pNotacion, pAlteracion);
        pianoTmp.setVisible(true);
        pianoTmp.setBounds(0,0,1150, 200);
        
        panelPiano.add(pianoTmp);
        
        panelPiano.updateUI();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        lblLogoTec = new javax.swing.JLabel();
        lblLogoApp = new javax.swing.JLabel();
        lblLogoClips1 = new javax.swing.JLabel();
        lblLogoClips2 = new javax.swing.JLabel();
        panelPianoMenu = new javax.swing.JPanel();
        panelPiano = new javax.swing.JPanel();
        lblPiano = new javax.swing.JLabel();
        panelMenu = new javax.swing.JPanel();
        lblNotacion1 = new javax.swing.JLabel();
        comboNotacion = new javax.swing.JComboBox<>();
        lblTonalidad = new javax.swing.JLabel();
        comboTonalidadNombre = new javax.swing.JComboBox<>();
        checkNombre = new javax.swing.JCheckBox();
        checkNumero = new javax.swing.JCheckBox();
        comboTonalidadAlteracion = new javax.swing.JComboBox<>();
        comboTonalidadNumero = new javax.swing.JComboBox<>();
        lblEscala = new javax.swing.JLabel();
        lblEscalaTitulo = new javax.swing.JLabel();
        panelAcorde = new javax.swing.JPanel();
        lblAcordeTitle = new javax.swing.JLabel();
        btnEliminarNota = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableAcorde = new javax.swing.JTable();
        lblResultadoTitle = new javax.swing.JLabel();
        btnCalcular = new javax.swing.JButton();
        btnTocarAcorde = new javax.swing.JButton();
        lblResultado = new javax.swing.JLabel();
        btnEliminarAcorde = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Expert system");
        setBackground(new java.awt.Color(51, 51, 51));
        setResizable(false);

        lblTitle.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("Expert System");

        lblLogoTec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/logoTECBLANCO.png"))); // NOI18N

        lblLogoApp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/logo.png"))); // NOI18N
        lblLogoApp.setText("jLabel1");

        lblLogoClips1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/logoClips.png"))); // NOI18N
        lblLogoClips1.setText("jLabel1");

        lblLogoClips2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/CLIPSIcon.gif"))); // NOI18N
        lblLogoClips2.setText("jLabel1");

        panelPianoMenu.setBackground(new java.awt.Color(34, 34, 34));
        panelPianoMenu.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        panelPiano.setPreferredSize(new java.awt.Dimension(1150, 200));

        javax.swing.GroupLayout panelPianoLayout = new javax.swing.GroupLayout(panelPiano);
        panelPiano.setLayout(panelPianoLayout);
        panelPianoLayout.setHorizontalGroup(
            panelPianoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1150, Short.MAX_VALUE)
        );
        panelPianoLayout.setVerticalGroup(
            panelPianoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        lblPiano.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        lblPiano.setForeground(new java.awt.Color(255, 255, 255));
        lblPiano.setText("Piano");

        javax.swing.GroupLayout panelPianoMenuLayout = new javax.swing.GroupLayout(panelPianoMenu);
        panelPianoMenu.setLayout(panelPianoMenuLayout);
        panelPianoMenuLayout.setHorizontalGroup(
            panelPianoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPianoMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPianoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPiano, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelPiano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelPianoMenuLayout.setVerticalGroup(
            panelPianoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPianoMenuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblPiano, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelPiano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        panelMenu.setBackground(new java.awt.Color(34, 34, 34));
        panelMenu.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblNotacion1.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        lblNotacion1.setForeground(new java.awt.Color(255, 255, 255));
        lblNotacion1.setText("Notación");

        comboNotacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inglesa", "Italiano" }));
        comboNotacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboNotacionItemStateChanged(evt);
            }
        });
        comboNotacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNotacionActionPerformed(evt);
            }
        });

        lblTonalidad.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        lblTonalidad.setForeground(new java.awt.Color(255, 255, 255));
        lblTonalidad.setText("Tonalidad");
        lblTonalidad.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        comboTonalidadNombre.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTonalidadNombreItemStateChanged(evt);
            }
        });
        comboTonalidadNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTonalidadNombreActionPerformed(evt);
            }
        });

        buttonGroup1.add(checkNombre);
        checkNombre.setForeground(new java.awt.Color(255, 255, 255));
        checkNombre.setSelected(true);
        checkNombre.setText("Nombre");
        checkNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkNombreActionPerformed(evt);
            }
        });

        buttonGroup1.add(checkNumero);
        checkNumero.setForeground(new java.awt.Color(255, 255, 255));
        checkNumero.setText("Número");
        checkNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkNumeroActionPerformed(evt);
            }
        });

        comboTonalidadAlteracion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sostenido", "Bemol" }));
        comboTonalidadAlteracion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTonalidadAlteracionItemStateChanged(evt);
            }
        });
        comboTonalidadAlteracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTonalidadAlteracionActionPerformed(evt);
            }
        });

        comboTonalidadNumero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7" }));
        comboTonalidadNumero.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTonalidadNumeroItemStateChanged(evt);
            }
        });
        comboTonalidadNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTonalidadNumeroActionPerformed(evt);
            }
        });

        lblEscala.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblEscala.setForeground(new java.awt.Color(255, 255, 255));
        lblEscala.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblEscala.setLabelFor(this);
        lblEscala.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblEscalaTitulo.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        lblEscalaTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblEscalaTitulo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblEscalaTitulo.setLabelFor(this);
        lblEscalaTitulo.setText("Escala Mayor");
        lblEscalaTitulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout panelMenuLayout = new javax.swing.GroupLayout(panelMenu);
        panelMenu.setLayout(panelMenuLayout);
        panelMenuLayout.setHorizontalGroup(
            panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNotacion1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboNotacion, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboTonalidadNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTonalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMenuLayout.createSequentialGroup()
                        .addComponent(comboTonalidadNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboTonalidadAlteracion, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelMenuLayout.createSequentialGroup()
                        .addComponent(checkNombre)
                        .addGap(18, 18, 18)
                        .addComponent(checkNumero)))
                .addGap(67, 67, 67)
                .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEscala, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblEscalaTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelMenuLayout.setVerticalGroup(
            panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboTonalidadNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboTonalidadAlteracion, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelMenuLayout.createSequentialGroup()
                        .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(checkNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(checkNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblNotacion1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTonalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboNotacion, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboTonalidadNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelMenuLayout.createSequentialGroup()
                        .addComponent(lblEscalaTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblEscala, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        checkNombre.getAccessibleContext().setAccessibleName("checkNombre");

        panelAcorde.setBackground(new java.awt.Color(34, 34, 34));
        panelAcorde.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblAcordeTitle.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        lblAcordeTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblAcordeTitle.setText("Acorde");

        btnEliminarNota.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnEliminarNota.setText("Eliminar Nota");
        btnEliminarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarNotaActionPerformed(evt);
            }
        });

        tableAcorde.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        tableAcorde.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nota", "Altura"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableAcorde.setAutoscrolls(false);
        tableAcorde.setRowHeight(20);
        tableAcorde.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tableAcorde);

        lblResultadoTitle.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        lblResultadoTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblResultadoTitle.setText("Resultado:");

        btnCalcular.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        btnTocarAcorde.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnTocarAcorde.setText("Tocar Acorde");
        btnTocarAcorde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTocarAcordeActionPerformed(evt);
            }
        });

        lblResultado.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        lblResultado.setForeground(new java.awt.Color(255, 255, 255));

        btnEliminarAcorde.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnEliminarAcorde.setText("Eliminar Acorde");
        btnEliminarAcorde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAcordeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAcordeLayout = new javax.swing.GroupLayout(panelAcorde);
        panelAcorde.setLayout(panelAcordeLayout);
        panelAcordeLayout.setHorizontalGroup(
            panelAcordeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAcordeLayout.createSequentialGroup()
                .addGroup(panelAcordeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAcordeLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(panelAcordeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelAcordeLayout.createSequentialGroup()
                                .addComponent(btnEliminarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminarAcorde, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelAcordeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblAcordeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelAcordeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblResultadoTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelAcordeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panelAcordeLayout.createSequentialGroup()
                            .addComponent(btnTocarAcorde, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        panelAcordeLayout.setVerticalGroup(
            panelAcordeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAcordeLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelAcordeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAcordeLayout.createSequentialGroup()
                        .addGroup(panelAcordeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAcordeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblResultadoTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelAcordeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEliminarNota, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(btnEliminarAcorde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(16, 16, 16))
                    .addGroup(panelAcordeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addGroup(panelAcordeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTocarAcorde, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblLogoApp, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblLogoClips1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblLogoClips2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(lblLogoTec, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panelPianoMenu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelMenu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelAcorde, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblLogoApp, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblLogoClips1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblLogoClips2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblLogoTec, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(panelMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelPianoMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelAcorde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printEscalaMayor(String pTonalidad, String pAlteracion) {
        String escala[] = piano.obtenerEscalaMayor(pTonalidad, pAlteracion);
        String escalaMayor = "";
        for (int i = 0; i < escala.length - 1; i++) {
            escalaMayor += escala[i] + " - ";
        }
        escalaMayor += escala[escala.length - 1];

        lblEscala.setText(escalaMayor);
    }

    private void btnEliminarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarNotaActionPerformed
        // TODO add your handling code here:
        if (this.tableAcorde.getSelectedRow() >= 0) {
            this.acordeTableMode.removeRow(this.tableAcorde.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleccione la nota por"
                    + " eliminar.", "PRECAUCION", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarNotaActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        // TODO add your handling code here:
        if (this.getTableAcorde().getRowCount() == 3) {
            connection.createConnection2Clips();

            connection.sendMessage("(clear)");
            connection.loadCPL();

            connection.sendMessage("(reset)");
            connection.sendMessage("(run) \n\n");

            System.out.println("run");

            System.out.println("Notacion-- " + piano.getNotacion());
            connection.sendMessage(piano.getNotacion());

            if (checkNombre.isSelected()) {
                System.out.println("Por Nombre-- 1");
                connection.sendMessage("1");

                System.out.println("Nombre-- " + this.comboTonalidadNombre.getItemAt(piano.getNumeroTonalidad()));
                connection.sendMessage(this.comboTonalidadNombre.getItemAt(piano.getNumeroTonalidad()));

            }
            if (checkNumero.isSelected()) {
                System.out.println("Por número-- 2");
                connection.sendMessage("2");

                System.out.println("Numero-- " + piano.getNumero());
                connection.sendMessage(piano.getNumero());
                System.out.println("Alteración-- " + piano.getAlteracion());
                connection.sendMessage(piano.getAlteracion());

            }

            for (int i = 0; i < this.getTableAcorde().getRowCount(); i++) {
                String acorde = getTableAcorde().getValueAt(i, 0).toString();
                if (acorde.equals("B") && piano.getAlteracion().equals("b")) {
                    acorde = "Cb";
                } else if (acorde.equals("Si") && piano.getAlteracion().equals("b")) {
                    acorde = "Dob";
                }
                connection.sendMessage(acorde);
                connection.sendMessage(getTableAcorde().getValueAt(i, 1).toString());
            }
            connection.sendMessage("/n");
            connection.sendMessage(Connection.DUMMY_STOP);
            
            String result = connection.printResponse();
            
            String resultArray[] = result.split("&");
            for (int i = 0; i < resultArray.length; i++) {
                System.out.println("------"+resultArray[i]);
                
            }
            if(resultArray.length > 1){
                this.lblResultado.setText(resultArray[0]);
            }else{
                this.lblResultado.setText("El acorde  no es válido con respecto a la tonalidad.");
            }
            
            connection.killConnection2Clips();
        }

    }//GEN-LAST:event_btnCalcularActionPerformed

    private void comboTonalidadNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTonalidadNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTonalidadNumeroActionPerformed

    private void comboTonalidadNumeroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTonalidadNumeroItemStateChanged
        // TODO add your handling code here:
        int index = 0;
        piano.setNumero(this.comboTonalidadNumero.getSelectedItem().toString());
        if(comboTonalidadAlteracion.getSelectedItem().equals("Sostenido")){
            index = 7+this.comboTonalidadNumero.getSelectedIndex();
        }else{
            index = 7-this.comboTonalidadNumero.getSelectedIndex();
        }

        if(piano.getNotacion().equals("1")){
            printEscalaMayor(circleEngland[index],piano.getAlteracion());
        }else{
            printEscalaMayor(circleItalian[index],piano.getAlteracion());
        }

        if(this.piano.getNumero().equals("0")){
            this.piano.setAlteracion("#");
            this.comboTonalidadAlteracion.setSelectedIndex(0);
        }
    }//GEN-LAST:event_comboTonalidadNumeroItemStateChanged

    private void comboTonalidadAlteracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTonalidadAlteracionActionPerformed
        // TODO add your handling code here:
        if(this.piano.getNumero().equals("0")){
            piano.setAlteracion("#");
            this.comboTonalidadAlteracion.setSelectedIndex(0);
            if(piano.getNotacion().equals("1")){
                printEscalaMayor(circleEngland[7],piano.getAlteracion());
            }else{
                printEscalaMayor(circleItalian[7],piano.getAlteracion());
            }
        }
    }//GEN-LAST:event_comboTonalidadAlteracionActionPerformed

    private void comboTonalidadAlteracionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTonalidadAlteracionItemStateChanged
        // TODO add your handling code here:
        this.getTableAcorde().setRowCount(0);
        int index = 0;
        if(this.comboTonalidadAlteracion.getSelectedItem().equals("Sostenido")){
            this.piano.setAlteracion("#");
            index = 7+this.comboTonalidadNumero.getSelectedIndex();
        }else{
            if(comboTonalidadNumero.getSelectedIndex() != 0){
                this.piano.setAlteracion("b");
            }
            index = 7-this.comboTonalidadNumero.getSelectedIndex();
        }

        if(piano.getNotacion().equals("1")){
            printEscalaMayor(circleEngland[index],piano.getAlteracion());
        }else{
            printEscalaMayor(circleItalian[index],piano.getAlteracion());
        }

        onPiano(piano.getNotacion(), piano.getAlteracion());
    }//GEN-LAST:event_comboTonalidadAlteracionItemStateChanged

    private void checkNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkNumeroActionPerformed
        // TODO add your handling code here:
        this.comboTonalidadNombre.setEnabled(false);
        this.comboTonalidadNumero.setEnabled(true);
        this.comboTonalidadAlteracion.setEnabled(true);
        
        int numero = this.comboTonalidadNumero.getSelectedIndex();
        int index = 0;
        if(this.comboTonalidadAlteracion.getSelectedItem().equals("Sostenido")){
            this.piano.setAlteracion("#");
            index = 7 + numero;
        }else{
            if(numero != 0){
                this.piano.setAlteracion("b");
            }
            index = 7 - numero;
        }

        if(piano.getNotacion().equals("1")){
            printEscalaMayor(circleEngland[index],piano.getAlteracion());
        }else{
            printEscalaMayor(circleItalian[index],piano.getAlteracion());
        }
        piano.setNumero(this.comboTonalidadNumero.getItemAt(numero));
        onPiano(piano.getNotacion(), piano.getAlteracion());
    }//GEN-LAST:event_checkNumeroActionPerformed

    private void checkNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkNombreActionPerformed
        // TODO add your handling code here:
       
        this.comboTonalidadNombre.setEnabled(true);
        this.comboTonalidadNumero.setEnabled(false);
        this.comboTonalidadAlteracion.setEnabled(false);
        
        int index = this.comboTonalidadNombre.getSelectedIndex();
        this.getTableAcorde().setRowCount(0);
        piano.setNumeroTonalidad(index);
        if(index >= 0 && index <= 6){
            System.out.println(index + "--BEMOL");
            this.piano.setAlteracion("b");
            printEscalaMayor(comboTonalidadNombre.getItemAt(index),"b");
            onPiano(piano.getNotacion(), piano.getAlteracion());
        }else if(index >= 7 && index <= 14){
            System.out.println(index + "--SOSTENIDO");
            piano.setAlteracion("#");
            printEscalaMayor(comboTonalidadNombre.getItemAt(index),"#");
            onPiano(piano.getNotacion(), piano.getAlteracion());
        }
    }//GEN-LAST:event_checkNombreActionPerformed

    private void comboTonalidadNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTonalidadNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTonalidadNombreActionPerformed

    private void comboTonalidadNombreItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTonalidadNombreItemStateChanged
        // TODO add your handling code here:
        int index = this.comboTonalidadNombre.getSelectedIndex();
        this.getTableAcorde().setRowCount(0);
        piano.setNumeroTonalidad(index);
        if(index >= 0 && index <= 6){
            System.out.println(index + "--BEMOL");
            this.piano.setAlteracion("b");
            printEscalaMayor(comboTonalidadNombre.getItemAt(index),"b");
            onPiano(piano.getNotacion(), piano.getAlteracion());
        }else if(index >= 7 && index <= 14){
            System.out.println(index + "--SOSTENIDO");
            piano.setAlteracion("#");
            printEscalaMayor(comboTonalidadNombre.getItemAt(index),"#");
            onPiano(piano.getNotacion(), piano.getAlteracion());
        }
    }//GEN-LAST:event_comboTonalidadNombreItemStateChanged

    private void comboNotacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNotacionActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_comboNotacionActionPerformed

    private void comboNotacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboNotacionItemStateChanged
        // TODO add your handling code here:
        this.comboTonalidadNombre.removeAllItems();
        this.getTableAcorde().setRowCount(0);
        if(this.comboNotacion.getSelectedItem().equals("Inglesa")){
            piano.setNotacion("1");
            onPiano(piano.getNotacion(), piano.getAlteracion());
            for (String circleEngland1 : circleEngland) {
                this.comboTonalidadNombre.addItem(circleEngland1);
            }
        }else{
            piano.setNotacion("2");
            onPiano(piano.getNotacion(), piano.getAlteracion());
            for (String circleItalian1 : circleItalian) {
                this.comboTonalidadNombre.addItem(circleItalian1);
            }
        }
    }//GEN-LAST:event_comboNotacionItemStateChanged

    private void btnTocarAcordeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTocarAcordeActionPerformed
        // TODO add your handling code here:
        ArrayList<String> notasAcorde = new ArrayList();
        ArrayList<Integer> indiceNotasAcorde = new ArrayList();
        for (int i = 0; i < this.getTableAcorde().getRowCount(); i++) {
            notasAcorde.add(getTableAcorde().getValueAt(i, 0).toString());
            indiceNotasAcorde.add((int)getTableAcorde().getValueAt(i, 1));
        }
        
        this.piano.playChord(notasAcorde, indiceNotasAcorde);
    }//GEN-LAST:event_btnTocarAcordeActionPerformed

    private void btnEliminarAcordeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAcordeActionPerformed
        // TODO add your handling code here:
        this.getTableAcorde().setRowCount(0);
    }//GEN-LAST:event_btnEliminarAcordeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnEliminarAcorde;
    private javax.swing.JButton btnEliminarNota;
    private javax.swing.JButton btnTocarAcorde;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox checkNombre;
    private javax.swing.JCheckBox checkNumero;
    private javax.swing.JComboBox<String> comboNotacion;
    private javax.swing.JComboBox<String> comboTonalidadAlteracion;
    private javax.swing.JComboBox<String> comboTonalidadNombre;
    private javax.swing.JComboBox<String> comboTonalidadNumero;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAcordeTitle;
    private javax.swing.JLabel lblEscala;
    private javax.swing.JLabel lblEscalaTitulo;
    private javax.swing.JLabel lblLogoApp;
    private javax.swing.JLabel lblLogoClips1;
    private javax.swing.JLabel lblLogoClips2;
    private javax.swing.JLabel lblLogoTec;
    private javax.swing.JLabel lblNotacion1;
    private javax.swing.JLabel lblPiano;
    private javax.swing.JLabel lblResultado;
    private javax.swing.JLabel lblResultadoTitle;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTonalidad;
    private javax.swing.JPanel panelAcorde;
    private javax.swing.JPanel panelMenu;
    private javax.swing.JPanel panelPiano;
    private javax.swing.JPanel panelPianoMenu;
    private javax.swing.JTable tableAcorde;
    // End of variables declaration//GEN-END:variables


    /**
     * @return the tableAcorde
     */
    public DefaultTableModel getTableAcorde() {
        return acordeTableMode;
    }
}
